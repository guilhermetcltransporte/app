datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  binaryTargets   = ["native", "debian-openssl-3.0.x", "linux-arm64-openssl-1.1.x", "rhel-openssl-3.0.x"]
}

model CompanyBusiness {

  id          Int     @db.Int @id @default(autoincrement()) @map("codigo_empresa")
  description String? @db.VarChar(50) @map("descricao")

  companies   Company[]

  @@map("empresa")

}

model Company {
  
  id                Int     @db.TinyInt @id @map("codigo_empresa_filial")
  companyBusinessId Int?    @db.Int @map("codigo_empresa")
  name              String? @db.NVarChar(100) @map("RazaoSocial")
  surname           String? @db.NVarChar(100) @map("nome_fantasia")

  companyBusiness   CompanyBusiness? @relation(fields: [companyBusinessId], references: [id])

  companyUsers      CompanyUser[]
  
  @@map("empresa_filial")

}

model CompanyUser {

  id        String   @db.UniqueIdentifier @id @default(uuid())
  companyId Int?     @db.TinyInt
  userId    String?  @db.UniqueIdentifier
  roleId    String?  @db.UniqueIdentifier

  company   Company? @relation(fields: [companyId], references: [id])

  @@map("companyUser")

}

model User {

  id         String  @db.UniqueIdentifier @id @map("UserId")
  userName   String? @db.NVarChar(256) @map("UserName")

  userMember UserMember? @relation("UserMembership")

  @@map("aspnet_Users")

}

model UserMember {

  userId      String  @db.UniqueIdentifier @id @map("UserId")
  email       String? @db.NVarChar(256) @map("Email")
  password    String? @db.NVarChar(128) @map("Password")

  user        User?   @relation("UserMembership", fields: [userId], references: [id])

  @@map("aspnet_Membership")

}